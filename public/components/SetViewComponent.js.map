{"version":3,"sources":["components/SetViewComponent.js"],"names":["window","FC","undefined","SetViewComponent","state","name","cards","cb","set","setState","UserData","getSet","props","params","setId","cardList","showQuizzer","length","map","card","id","front","back","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAW;AAAA,MAEJE,gBAFI;AAAA;;AAIR,gCAAc;AAAA;;AAAA;;AAGZ,YAAKC,KAAL,GAAa;AACXC,cAAM,EADK;AAEXC,eAAO;AAFI,OAAb;AAHY;AAOb;;AAXO;AAAA;AAAA,0CAaY;AAAA;;AAClB,YAAIC,KAAK,SAALA,EAAK,CAACC,GAAD,EAAS;AAChB,iBAAKC,QAAL,CAAc;AACZJ,kBAAMG,IAAIH,IADE;AAEZC,mBAAOE,IAAIF;AAFC,WAAd;AAID,SALD;;AAOAL,WAAGS,QAAH,CAAYC,MAAZ,CAAmB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAArC,EAA4CP,EAA5C;AACD;AAtBO;AAAA;AAAA,+BAwBC;;AAEP,YAAIQ,QAAJ;AACA,YAAIC,WAAJ;AACA,YAAI,KAAKZ,KAAL,CAAWE,KAAX,CAAiBW,MAAjB,KAA4B,CAAhC,EAAmC;AACjCF,qBAAW;AAAA;AAAA;AAAA;AAAA,WAAX;AACD,SAFD,MAGK;AACHC,wBAAc;AAAA;AAAA;AAAI;AAAC,yBAAD,CAAa,IAAb;AAAA,gBAAkB,IAAI,UAAU,KAAKJ,KAAL,CAAWC,MAAX,CAAkBC,KAA5B,GAAoC,UAA1D;AAAA;AAAA;AAAJ,WAAd;AACAC,qBAAW;AAAA;AAAA;AACR,iBAAKX,KAAL,CAAWE,KAAX,CAAiBY,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC9B,qBAAO;AAAA;AAAA,kBAAI,KAAKA,KAAKC,EAAd,EAAkB,WAAU,MAA5B;AACL;AAAA;AAAA,oBAAK,WAAU,OAAf;AAAA;AAA+BD,uBAAKE;AAApC,iBADK;AAEL;AAAA;AAAA,oBAAK,WAAU,MAAf;AAAA;AAA6BF,uBAAKG;AAAlC;AAFK,eAAP;AAID,aALA;AADQ,WAAX;AAQD;;AAED,eAAO;AAAA;AAAA,YAAK,WAAU,eAAf;AACL;AAAA;AAAA;AAAA;AAAU,iBAAKlB,KAAL,CAAWC,IAArB;AAAA;AAAiC,iBAAKO,KAAL,CAAWC,MAAX,CAAkBC,KAAnD;AAAA;AAAA,WADK;AAGL;AAAA;AAAA,cAAK,WAAU,UAAf;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI;AAAC,6BAAD,CAAa,IAAb;AAAA,oBAAkB,IAAI,UAAU,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,KAA5B,GAAoC,UAA1D;AAAA;AAAA;AAAJ,eADF;AAEGE;AAFH;AADF,WAHK;AAYJD;AAZI,SAAP;AAcD;AAzDO;;AAAA;AAAA,IAEqBQ,MAAMC,SAF3B;;AA6DVvB,KAAGE,gBAAH,GAAsBA,gBAAtB;AAED,CA/DD","file":"SetViewComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetViewComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        name: '',\n        cards: []\n      }\n    }\n\n    componentDidMount() {\n      var cb = (set) => {\n        this.setState({\n          name: set.name,\n          cards: set.cards\n        });\n      };\n\n      FC.UserData.getSet(this.props.params.setId, cb);\n    }\n\n    render() {\n\n      var cardList;\n      var showQuizzer;\n      if (this.state.cards.length === 0) {\n        cardList = <div>You have no cards.</div>\n      }\n      else {\n        showQuizzer = <li><ReactRouter.Link to={'/set/' + this.props.params.setId + '/quizzer'}>Quizzer</ReactRouter.Link></li>;\n        cardList = <ul>\n          {this.state.cards.map((card) => {\n            return <li key={card.id} className=\"card\">\n              <div className=\"front\">Front: {card.front}</div>\n              <div className=\"back\">Back: {card.back}</div>\n            </li>\n          })}\n        </ul>;\n      }\n\n      return <div className=\"set-component\">\n        <h2>Set: {this.state.name} (id: {this.props.params.setId})</h2>\n\n        <div className=\"controls\">\n          <ul>\n            <li><ReactRouter.Link to={'/set/' + this.props.params.setId + '/newcard'}>Add a New Card</ReactRouter.Link></li>\n            {showQuizzer}\n          </ul>\n\n\n        </div>\n\n        {cardList}\n      </div>\n    }\n\n  }\n\n  FC.SetViewComponent = SetViewComponent;\n\n})();\n"]}