{"version":3,"sources":["/client/js/components/SetListComponent.js"],"names":["window","FC","undefined","SetListComponent","state","sets","loadSets","UserData","data","setState","setId","$","ajax","url","method","done","ReactRouter","hashHistory","push","console","log","noSetsMessaging","length","map","set","index","noCardsMessaging","cards","navigateToQuiz","id","name","description","deleteSet","addCards","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAW;AAAA,MAEJE,gBAFI;AAAA;;AAIR,gCAAc;AAAA;;AAAA;;AAGZ,YAAKC,KAAL,GAAa;AACXC,cAAM;AADK,OAAb;AAHY;AAMb;;AAVO;AAAA;AAAA,0CAYY;AAClB,aAAKC,QAAL;AACD;AAdO;AAAA;AAAA,iCAgBG;AAAA;;AAETL,WAAGM,QAAH,CAAYD,QAAZ,CAAqB,UAACE,IAAD,EAAU;AAC7B,iBAAKC,QAAL,CAAc;AACZJ,kBAAMG,KAAKH;AADC,WAAd;AAGD,SAJD;AAKD;AAvBO;AAAA;AAAA,gCAyBEK,KAzBF,EAyBS;AAAA;;AACfC,UAAEC,IAAF,CAAO;AACLC,eAAK,eAAeH,KADf;AAELI,kBAAQ;AAFH,SAAP,EAICC,IAJD,CAIM,YAAM;AACV,iBAAKT,QAAL;AACD,SAND;AAOD;AAjCO;AAAA;AAAA,+BAmCCI,KAnCD,EAmCQ;AACdM,oBAAYC,WAAZ,CAAwBC,IAAxB,CAA6B,UAAUR,KAAvC;AACD;AArCO;AAAA;AAAA,qCAuCOA,KAvCP,EAuCc;AAClBM,oBAAYC,WAAZ,CAAwBC,IAAxB,CAA6B,UAAUR,KAAV,GAAkB,UAA/C;AACJ;AAzCQ;AAAA;AAAA,+BA2CC;AAAA;;AACPS,gBAAQC,GAAR,CAAY,gBAAZ,EAA8B,KAAKhB,KAAnC;;AAEA,YAAIiB,eAAJ;AACA,YAAI,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,MAAhB,KAA2B,CAA/B,EAAkC;AAChCD,4BAAkB;AAAA;AAAA;AAAA;AAAA,WAAlB;AACD;;AAED,eAAO;AAAA;AAAA,YAAK,WAAU,UAAf;AACL;AAAA;AAAA;AAAA;AAAA,WADK;AAGJA,yBAHI;AAKL;AAAC,uBAAD,CAAa,IAAb;AAAA,cAAkB,IAAG,aAArB;AAAA;AAAA,WALK;AAOL;AAAA;AAAA;AACC,iBAAKjB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnC,kBAAIC,gBAAJ;AACA,kBAAIF,IAAIG,KAAJ,CAAUL,MAAV,GAAmB,CAAvB,EAA0B;AACxBI,mCAAmB;AAAA;AAAA,oBAAK,WAAU,aAAf,EAA6B,SAAS,mBAAM;AAAC,6BAAKE,cAAL,CAAoBJ,IAAIK,EAAxB,EAA4BL,IAAIG,KAAJ,CAAUL,MAAtC;AAA8C,qBAA3F;AAAA;AAAA,iBAAnB;AACD;AACD,qBAAO;AAAA;AAAA,kBAAI,KAAKE,IAAIK,EAAb,EAAiB,WAAU,KAA3B;AACL;AAAA;AAAA,oBAAK,WAAU,UAAf;AAA2BL,sBAAIM;AAA/B,iBADK;AAEL;AAAA;AAAA,oBAAK,WAAU,iBAAf;AAAA;AAA8CN,sBAAIG,KAAJ,CAAUL;AAAxD,iBAFK;AAGL;AAAA;AAAA;AAAIE,sBAAIO;AAAR,iBAHK;AAKL;AAAA;AAAA,oBAAK,WAAU,mBAAf,EAAmC,SAAS,mBAAM;AAAC,6BAAKC,SAAL,CAAeR,IAAIK,EAAnB;AAAuB,qBAA1E;AAAA;AAAA,iBALK;AAML;AAAA;AAAA,oBAAK,WAAU,kBAAf,EAAkC,SAAS,mBAAM;AAAC,6BAAKI,QAAL,CAAcT,IAAIK,EAAlB;AAAsB,qBAAxE;AAAA;AAAA,iBANK;AAQJH;AARI,eAAP;AAUD,aAfA;AADD;AAPK,SAAP;AA0BD;AA7EO;;AAAA;AAAA,IAEqBQ,MAAMC,SAF3B;;AAgFVlC,KAAGE,gBAAH,GAAsBA,gBAAtB;AACD,CAjFD","file":"SetListComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetListComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        sets: []\n      }\n    }\n\n    componentDidMount() {\n      this.loadSets();\n    }\n\n    loadSets() {\n\n      FC.UserData.loadSets((data) => {\n        this.setState({\n          sets: data.sets\n        });\n      });\n    }\n\n    deleteSet(setId) {\n      $.ajax({\n        url: '/api/sets/' + setId,\n        method: 'DELETE'\n      })\n      .done(() => {\n        this.loadSets();\n      });\n    }\n\n    addCards(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId);\n    }\n\n    navigateToQuiz(setId) {\n        ReactRouter.hashHistory.push('/set/' + setId + '/quizzer');\n   }\n\n    render() {\n      console.log('SetList.render', this.state);\n\n      var noSetsMessaging;\n      if (this.state.sets.length === 0) {\n        noSetsMessaging = <p>You do not have any sets! Create one.</p>\n      }\n\n      return <div className=\"set-list\">\n        <h2>Set List</h2>\n\n        {noSetsMessaging}\n\n        <ReactRouter.Link to=\"/create-set\">Create new set</ReactRouter.Link>\n\n        <ul>\n        {this.state.sets.map((set, index) => {\n          var noCardsMessaging;\n          if (set.cards.length > 0) {\n            noCardsMessaging = <div className=\"button quiz\" onClick={() => {this.navigateToQuiz(set.id, set.cards.length)}}>quiz</div>\n          }\n          return <li key={set.id} className=\"set\">\n            <div className=\"set-name\">{set.name}</div>\n            <div className=\"number-of-cards\"># of cards: {set.cards.length}</div>\n            <p>{set.description}</p>\n\n            <div className=\"button delete-set\" onClick={() => {this.deleteSet(set.id)}}>delete</div>\n            <div className=\"button add-cards\" onClick={() => {this.addCards(set.id)}}>add cards</div>\n\n            {noCardsMessaging}\n          </li>\n        })}\n        </ul>\n      </div>;\n    }\n  }\n\n  FC.SetListComponent = SetListComponent;\n})();\n"]}